"use strict";

var _freeze = require("babel-runtime/core-js/object/freeze");

var _freeze2 = _interopRequireDefault(_freeze);

var _promise = require("babel-runtime/core-js/promise");

var _promise2 = _interopRequireDefault(_promise);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });

var RetryingQueue = function () {
    function RetryingQueue() {
        (0, _classCallCheck3.default)(this, RetryingQueue);

        this.queue = new Array();
        this.isActive = false;
    }

    (0, _createClass3.default)(RetryingQueue, [{
        key: "wakeupQueue",
        value: function wakeupQueue() {
            var _this = this;

            if (!this.isActive && this.queue.length > 0) {
                this.isActive = true;
                setTimeout(function () {
                    return _this.executeTask(_this.queue[0]);
                }, 0);
            }
        }
    }, {
        key: "pickNext",
        value: function pickNext() {
            var _this2 = this;

            this.queue.shift();
            if (this.queue.length === 0) {
                this.isActive = false;
                return;
            }
            setTimeout(function () {
                return _this2.executeTask(_this2.queue[0]);
            }, 0);
        }
    }, {
        key: "pickSame",
        value: function pickSame(arg) {
            var _this3 = this;

            this.queue[0].arg = arg;
            setTimeout(function () {
                return _this3.executeTask(_this3.queue[0]);
            }, 0);
        }
    }, {
        key: "executeTask",
        value: function executeTask(task) {
            var _this4 = this;

            task.task(task.context, task.arg).then(function (result) {
                _this4.pickNext();
                task.resolve(result);
            }).catch(function (error) {
                try {
                    if (task.handle) {
                        task.handle(error).then(function (result) {
                            return _this4.pickSame(result);
                        }).catch(task.reject);
                    } else {
                        throw error;
                    }
                } catch (e) {
                    task.reject(error);
                }
            });
        }
    }, {
        key: "add",
        value: function add(task, context, arg, errorHandler) {
            var _this5 = this;

            return new _promise2.default(function (resolve, reject) {
                _this5.queue.push({
                    task: task,
                    context: context,
                    arg: arg,
                    handle: errorHandler,
                    resolve: resolve,
                    reject: reject
                });
                _this5.wakeupQueue();
            });
        }
    }]);
    return RetryingQueue;
}();

exports.RetryingQueue = RetryingQueue;
(0, _freeze2.default)(RetryingQueue);
exports.default = RetryingQueue;