export interface MapItemDescriptor {
    key: string;
    url: string;
    revision: string;
    last_event_id: number;
    data: Object;
}
/**
 * @class
 * @classdesc Represents an individual element in a Sync Map.
 * @alias MapItem
 * @property {String} key The identifier that maps to this item within the containing Map.
 * @property {Object} value The contents of the item.
 */
declare class MapItem {
    private readonly descriptor;
    /**
     * @private
     * @constructor
     * @param {Object} data Item descriptor
     * @param {String} data.key Item identifier
     * @param {String} data.uri Item URI
     * @param {Object} data.value Item data
     */
    constructor(descriptor: MapItemDescriptor);
    readonly uri: string;
    readonly revision: string;
    readonly lastEventId: number;
    readonly key: string;
    readonly value: Object;
    /**
     * Update item data
     * @param {Number} EventId Update event id
     * @param {String} Revision Updated item revision
     * @param {Object} Value Updated item data
     * @private
     */
    update(eventId: number, revision: string, value: Object): MapItem;
}
export { MapItem };
export default MapItem;
